package com.github.micli.cognitiveservice.api.vision;

import java.net.URI;
import java.util.ArrayList;

import com.github.micli.cognitiveservice.api.result.ObjectResult;

public class ChinaMainlandIdentityCard {
	private Vision vision = null;
	public ChinaMainlandIdentityCard(URI endPoint, String accessKey) {
		// TODO Auto-generated constructor stub
		vision = new Vision(endPoint, accessKey);
	}

    public ChinaMainlandIdentityCardInfo RetrieveFromLocalFile(String filePath){
    	if(null == filePath || "" == filePath)
    		return null;
		ObjectResult<OCRValue> result = vision.OCRFromLocalFile(filePath);
		if(!result.isSucceeded())
			return null;
		OCRValue ocrValue = result.getInstance();
		ArrayList<OCRTextElement> elements = BuildOCRTextElementArray(ocrValue);
		ArrayList<ArrayList<String>> lines = MakeOCRTextElementInLines(elements);
		for(ArrayList<String> line : lines) {
			System.out.println(line.toString());
		}
		return null;
    }

    // 直接拿word
    private ArrayList<OCRTextElement> BuildOCRTextElementArray(OCRValue ocrValue) {
    	ArrayList<OCRTextElement> elements = new ArrayList<OCRTextElement>();
    	if(null == ocrValue) 
    		return elements;
    	for(OCRRegionElement region : ocrValue.getRegions()) {
    		for(OCRLineElement line : region.getLines()) {
    			for(OCRTextElement word : line.getWords())
    				elements.add(word);
    		}
    	}
    		
    	return elements;
    }

    private ArrayList<ArrayList<String>> MakeOCRTextElementInLines(ArrayList<OCRTextElement> elements) {
    	ArrayList<ArrayList<String>> lines = new ArrayList<ArrayList<String>>();
    	if(null == elements)
    		return lines;
    	ArrayList<Integer> indexList = new ArrayList<Integer>();
    	ArrayList<String> line = null;
    	int middleHeight = 0;
    	int length = elements.toArray().length;
    	OCRTextElement lineFirst = null;
    	OCRTextElement temp = null;
    	ArrayList<OCRTextElement> tempList = new ArrayList<OCRTextElement>();
    	while(length > 0) {
    		lineFirst = elements.get(0);
    		indexList.add(0);
    		line = new ArrayList<String>();
    		line.add(lineFirst.getText());
    		middleHeight = lineFirst.getRectangle().getTop() + 
    				lineFirst.getRectangle().getHeight() / 2;
        	for(int i = 1; i < length; i++) {
        		temp = elements.get(i);
        		if(temp.getRectangle().getTop() < middleHeight && 
        				temp.getRectangle().getTop() + temp.getRectangle().getHeight() > middleHeight) {
        			line.add(temp.getText());
        			tempList.add(temp);
        		}
        	}
        	lines.add(line);
        	System.out.println(line);
        	elements.removeAll(tempList);
        	tempList.clear();
        	indexList.clear();
    		length = elements.toArray().length;
    	}
    	
    	return lines;
    }
}
